{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","thead","tbody","thList","querySelectorAll","form","createElement","formHtml","insertAdjacentHTML","classList","add","after","submit","formatSalary","employee","index","data","cells","innerHTML","split","join","slice","formatVal","val","trim","map","word","toUpperCase","setOrderTrue","arr","forEach","th","dataset","ascOrder","sortColumn","e","employeeList","sortedArr","columnIndex","target","cellIndex","currCol","falseList","sort","currEmployee","nextEmployee","currData","nextData","Number","localeCompare","append","selectRow","activeRow","targetRow","closest","includes","remove","pushNotification","title","description","type","lastOfBody","body","lastElementChild","notification","before","className","dataQa","setTimeout","addEmployee","preventDefault","formData","FormData","dataObj","Object","fromEntries","entries","newRowHtml","name","position","office","age","salary","toLocaleString","length","inputText","cell","cellData","cellStyle","getComputedStyle","cellPaddingL","parseFloat","paddingLeft","cellPaddingR","paddingRight","cellContentWidth","clientWidth","cellInput","style","width","focus","addEventListener","evt","key","onblur","value","isNaN","inputValue"],"mappings":"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","file":"main.45c17994.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst thList = thead.querySelectorAll('th');\nconst form = document.createElement('form');\nconst formHtml = `\n  <label>Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\">\n  </label>\n\n  <label>Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\">\n  </label>\n\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n  </label>\n\n  <button>Save to table</button>\n`;\n\nform.insertAdjacentHTML('afterbegin', formHtml);\nform.classList.add('new-employee-form');\ntable.after(form);\n\nconst submit = form.querySelector('button');\n\nfunction formatSalary(employee, index) {\n  const data = employee.cells[index].innerHTML;\n\n  if (data[0] === '$') {\n    return +data.split(',').join('').slice(1);\n  }\n\n  return data;\n}\n\nfunction formatVal(val) {\n  if (val) {\n    return val\n      .trim()\n      .split(' ')\n      .map(word => word[0].toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n}\n\nfunction setOrderTrue(arr) {\n  arr.forEach(th => {\n    th.dataset.ascOrder = true;\n  });\n}\n\nfunction sortColumn(e) {\n  const employeeList = tbody.querySelectorAll('tr');\n  const columnIndex = e.target.cellIndex;\n  const currCol = e.target;\n  const falseList = thead.querySelectorAll('[data-asc-order=\"false\"]');\n  let sortedArr;\n\n  if (currCol.dataset.ascOrder === 'true') {\n    setOrderTrue([...falseList]);\n\n    currCol.dataset.ascOrder = false;\n\n    sortedArr = [...employeeList].sort((currEmployee, nextEmployee) => {\n      const currData = formatSalary(currEmployee, columnIndex);\n      const nextData = formatSalary(nextEmployee, columnIndex);\n\n      if (Number(currData)) {\n        return currData - nextData;\n      }\n\n      return currData.localeCompare(nextData);\n    });\n  } else {\n    setOrderTrue([...falseList]);\n\n    sortedArr = [...employeeList].sort((currEmployee, nextEmployee) => {\n      const currData = formatSalary(currEmployee, columnIndex);\n      const nextData = formatSalary(nextEmployee, columnIndex);\n\n      if (Number(currData)) {\n        return nextData - currData;\n      }\n\n      return nextData.localeCompare(currData);\n    });\n  }\n\n  tbody.append(...sortedArr);\n}\n\nfunction selectRow(e) {\n  const activeRow = tbody.querySelector('.active');\n  const targetRow = e.target.closest('tr');\n\n  if (![...targetRow.classList].includes('active')) {\n    targetRow.classList.add('active');\n  }\n\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  targetRow.classList.add('active');\n}\n\nfunction pushNotification(title, description, type) {\n  const lastOfBody = document.body.lastElementChild;\n  const notification = document.createElement('div');\n\n  lastOfBody.before(notification);\n  notification.className = `notification ${type}`;\n  notification.dataset.dataQa = 'notification';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>\n  `;\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nfunction addEmployee(e) {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const dataObj = Object.fromEntries(formData.entries());\n  const newRowHtml = `\n    <tr>\n      <td>${formatVal(dataObj.name)}</td>\n      <td>${formatVal(dataObj.position)}</td>\n      <td>${dataObj.office}</td>\n      <td>${dataObj.age}</td>\n      <td>${'$' + Number(dataObj.salary).toLocaleString('en-us')}</td>\n    </tr>\n  `;\n\n  for (const val in dataObj) {\n    if (!dataObj[val]) {\n      pushNotification('Ooops!', 'Fill in the form', 'error');\n\n      return;\n    }\n  }\n\n  if (dataObj.name.length < 4) {\n    pushNotification('Ooops!', 'Entered name is short', 'error');\n\n    return;\n  }\n\n  if (dataObj.age < 18 || dataObj.age > 90) {\n    pushNotification('Ooops!', 'Entered age is incorrect', 'error');\n\n    return;\n  }\n\n  pushNotification('Congratulation!',\n    'New employee is created', 'success');\n\n  tbody.insertAdjacentHTML('beforeend', newRowHtml);\n}\n\nfunction inputText(e) {\n  const cell = e.target;\n  const cellData = cell.innerHTML;\n  const cellStyle = getComputedStyle(cell);\n  const cellPaddingL = parseFloat(cellStyle.paddingLeft);\n  const cellPaddingR = parseFloat(cellStyle.paddingRight);\n  const cellContentWidth = cell.clientWidth - cellPaddingL - cellPaddingR;\n\n  const cellHtml = `\n    <input name=\"name\" type=\"text\" class=\"cell-input\">\n  `;\n\n  cell.innerHTML = cellHtml;\n\n  const cellInput = cell.querySelector('input');\n\n  cellInput.style.width = cellContentWidth + 'px';\n  cellInput.focus();\n\n  cellInput.addEventListener('keypress', function(evt) {\n    if (evt.key === 'Enter') {\n      cellInput.onblur();\n    }\n  });\n\n  cellInput.onblur = function() {\n    if (cellInput.value.length === 0) {\n      cell.innerHTML = cellData;\n\n      return;\n    }\n\n    if (cellData[0] === '$') {\n      if (isNaN(+cellInput.value) === false) {\n        cell.innerHTML = '$' + Number(cellInput.value).toLocaleString('en-us');\n      } else {\n        cell.innerHTML = cellData;\n        pushNotification('Ooops!', 'Data format is incorrected', 'error');\n      }\n\n      return;\n    }\n\n    if (isNaN(+cellData) !== isNaN(+cellInput.value)) {\n      cell.innerHTML = cellData;\n      pushNotification('Ooops!', 'Data format is incorrected', 'error');\n\n      return;\n    }\n\n    const inputValue = formatVal(cellInput.value);\n\n    cell.innerHTML = inputValue;\n  };\n}\n\nsetOrderTrue([...thList]);\nthead.addEventListener('click', sortColumn);\ntbody.addEventListener('click', selectRow);\nsubmit.addEventListener('click', addEmployee);\ntbody.addEventListener('dblclick', inputText);\n"]}